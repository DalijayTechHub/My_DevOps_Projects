#!/bin/bash

# Configuration
MAX_PASSWORD_AGE=90
LOG_FILE="/var/log/password_expiration.log"

# Ensure the script is run as root
if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root." >&2
  exit 1
fi

# Function to log messages with levels
log_message() {
  local level=$1
  local message=$2
  echo "$(date '+%Y-%m-%d %H:%M:%S') [$level] $message" >> "$LOG_FILE"
}

# Function to check and expire old passwords
expire_passwords() {
  local old_password_users
  old_password_users=$(awk -v max_days="$MAX_PASSWORD_AGE" -F: '
    BEGIN { OFS=":" }
    { if ($3 + max_days < systime()) print $1 }' /etc/shadow)
    
  if [[ -z "$old_password_users" ]]; then
    log_message "INFO" "No users with passwords older than $MAX_PASSWORD_AGE days."
    return
  fi

  for user in $old_password_users; do
    log_message "INFO" "Expiring password for user: $user"
    chage -d 0 "$user"
    if [[ $? -eq 0 ]]; then
      log_message "SUCCESS" "Password for user $user successfully expired."
    else
      log_message "ERROR" "Failed to expire password for user $user."
    fi
  done
}

# Main script execution
log_message "INFO" "Starting password expiration check."
expire_passwords
log_message "INFO" "Password expiration check completed."
